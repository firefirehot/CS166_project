

DROP TABLE Customer CASCADE;

DROP TABLE Cruise CASCADE;

DROP TABLE CRU_CRE CASCADE;

DROP TABLE CAP_SHI CASCADE;

DROP TABLE RES_CRUCASCADE;

DROP TABLE RES_CUS CASCADE;

DROP TABLE CUST_CRU CASCADE;

DROP TABLE Ship CASCADE;

DROP TABLE SHI_TEC CASCADE;

DROP TABLE Captain CASCADE;

DROP TABLE request CASCADE;

DROP TABLE CAP_TEC CASCADE;

DROP TABLE Technician CASCADE;

DROP TABLE Schedule CASCADE;

DROP TABLE Crew CASCADE;

DROP TABLE Reservation CASCADE;

DROP TABLE Waitlist CASCADE;

DROP TABLE Confirmed CASCADE;

DROP TABLE Reserved CASCADE;
CREATE TABLE Customer(first_name CHAR[11], last_name CHAR[11], gender CHAR[9], date_of_birth CHAR[11] NOT NULL, address CHAR[64] NOT NULL, contact_num int NOT NULL, ID int NOT NULL, Zip_code int NOT NULL, PRIMARY KEY (ID), FOREIGN KEY(c-num) REFERENCES Cruise(c-num) ON DELETE CASCADE);

CREATE TABLE Cruise(c-num int NOT NULL,cost int, num_sold int, num_stops int, actual_arrive date CHAR[11], actual_depart_date CHAR[11] , actual_arrive_time CHAR[11], actual_depart_time CHAR[11], source CHAR[64], destination CHAR[64], CID int, SID int, PRIMARY KEY Y(c-num), FOREIGN KEY(SID) REFERENCES Ship(ID) ON DELETE CASCADE, FOREIGN KEY(CID) REFERENCES Captain(ID) ON DELETE CASCADE);
/*for this we need to use outside code to make sure that captain has at least one cruize*/

CREATE TABLE CRU_CRE(c-num int NOT NULL, ID int, PRIMARY KEY Y(ID,c-num), FOREIGN KEY(c-num) REFERENCES Cruise(c-num) ON DELETE CASCADE, FOREIGN KEY(ID) REFERENCES Crew(ID) ON DELETE CASCADE);

CREATE TABLE CAP_SHI(CID int NOT NULL, SID int NOT NULL, PRIMARY KEY Y(CID,SID), FOREIGN KEY(SID) REFERENCES Ship(ID) ON DELETE CASCADE, FOREIGN KEY(CID) REFERENCES Captain(ID) ON DELETE CASCADE);


CREATE TABLE RES_CRU(Rnum int NOT NULL, c-num int NOT NULL, PRIMARY KEY Y(Rnum,c-num), FOREIGN KEY(Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE, FOREIGN KEY(c-num) REFERENCES Cruize(c-num) ON DELETE CASCADE);

CREATE TABLE RES_CUS(Rnum int NOT NULL, ID int NOT NULL, PRIMARY KEY (Rnum, ID), FOREIGN KEY(Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE, FOREIGN KEY(ID) REFERENCES Customer(ID) ON DELETE CASCADE);

CREATE TABLE CUST_CRU(c-num int NOT NULL, ID int NOT NULL, PRIMARY KEY (c-num, ID), FOREIGN KEY(c-num) REFERENCES Cruise(c-num) ON DELETE CASCADE, FOREIGN KEY(ID) REFERENCES Customer(ID) ON DELETE CASCADE);

CREATE TABLE Ship(model CHAR[11] NOT NULL, ID int NOT NULL, make CHAR[11] NOT NULL, age int NOT NULL, Seats int NOT NULL, PRIMARY KEY (ID), FOREIGN KEY() REFERENCES  ON DELETE CASCADE);

CREATE TABLE SHI_TEC(code int NOT NULL, date CHAR[11], SID int NOT NULL, TID int, PRIMARY KEY (code), FOREIGN KEY(SID) REFERENCES Ship(ID) ON DELETE CASCADE, FOREIGN KEY(TID) REFERENCES Technician(ID) ON DELETE CASCADE);
/*assuming that code is a unique attribute*/

CREATE TABLE Captain(ID int NOT NULL, name CHAR[11], PRIMARY KEY Y(ID), FOREIGN KEY() REFERENCES Z() ON DELETE CASCADE);

CREATE TABLE request(ID int, CID int NOT NULL, SID int NOT NULL, PRIMARY KEY (ID), FOREIGN KEY(CID) REFERENCES Captain(ID) ON DELETE CASCADE, FOREIGN KEY(SID) REFERENCES Ship(ID) ON DELETE CASCADE);
/*if ID for requests is not identifying then we need to change the primary key to SID,CID*/

CREATE TABLE CAP_TEC(ID int, CID int NOT NULL, TID int NOT NULL, PRIMARY KEY (ID), FOREIGN KEY(CID) REFERENCES Captain(ID) ON DELETE CASCADE, FOREIGN KEY(TID) REFERENCES Technician(ID) ON DELETE CASCADE);
/*if ID for requests is not identifying then we need to change the primary key to TID,CID*/

CREATE TABLE Technician(ID int NOT NULL, PRIMARY KEY Y(ID), FOREIGN KEY() REFERENCES Z ON DELETE CASCADE);

CREATE TABLE Schedule(c-num int NOT NULL, day char[11], depart_time CHAR[11], arrive_time CHAR[11] PRIMARY KEY (c-num), FOREIGN KEY(c-num) REFERENCES Cruize(c-num) ON DELETE CASCADE);
/*for this we need to use outside code to make sure that cruise has at least one schedule*/

CREATE TABLE Crew(name CHAR[11] NOT NULL, ID int NOT NULL PRIMARY KEY Y(ID), FOREIGN KEY(c-num) REFERENCES Cruise(c-num) ON DELETE CASCADE);

CREATE TABLE Reservation(Rnum int NOT NULL, PRIMARY KEY Y(Rnum));

CREATE TABLE Waitlist(W-Rnum int NOT NULL, PRIMARY KEY Y(W-Rnum), FOREIGN KEY(Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);

CREATE TABLE Confirmed(C-Rnum int NOT NULL, PRIMARY KEY Y(C-Rnum), FOREIGN KEY(Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);

CREATE TABLE Reserved(R-Rnum int NOT NULL, PRIMARY KEY Y(R-Rnum), FOREIGN KEY(Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);
