
DROP TABLE IF EXISTS Customer CASCADE;
DROP TABLE IF EXISTS Cruise CASCADE;
DROP TABLE IF EXISTS CRU_CRE CASCADE;
DROP TABLE IF EXISTS CAP_SHI CASCADE;
DROP TABLE IF EXISTS RES_CRUCASCADE;
DROP TABLE IF EXISTS RES_CUS CASCADE;
DROP TABLE IF EXISTS CUST_CRU CASCADE;
DROP TABLE IF EXISTS Ship CASCADE;
DROP TABLE IF EXISTS SHI_TEC CASCADE;
DROP TABLE IF EXISTS Captain CASCADE;
DROP TABLE IF EXISTS request CASCADE;
DROP TABLE IF EXISTS CAP_TEC CASCADE;
DROP TABLE IF EXISTS Technician CASCADE;
DROP TABLE IF EXISTS Schedule CASCADE;
DROP TABLE IF EXISTS Crew CASCADE;
DROP TABLE IF EXISTS Reservation CASCADE;
DROP TABLE IF EXISTS Waitlist CASCADE;
DROP TABLE IF EXISTS Confirmed CASCADE;
DROP TABLE IF EXISTS Reserved CASCADE;

CREATE TABLE Technician(ID int NOT NULL,
PRIMARY KEY (ID));

CREATE TABLE Reservation(Rnum int NOT NULL, PRIMARY KEY (Rnum));

CREATE TABLE Ship(model CHAR[11] NOT NULL, ID int NOT NULL, make CHAR[11] NOT NULL, 
age int NOT NULL, Seats int NOT NULL, 
PRIMARY KEY (ID)); 

CREATE TABLE Captain(ID int NOT NULL, name CHAR[11], 
PRIMARY KEY (ID));

CREATE TABLE Cruise(cnum int NOT NULL,cost int, num_sold int, num_stops int, actual_arrive_date CHAR[11], 
actual_depart_date CHAR[11] , actual_arrive_time CHAR[11], actual_depart_time CHAR[11], source CHAR[64], 
destination CHAR[64], CID int, SID int, 
PRIMARY KEY (cnum), 
FOREIGN KEY(SID) REFERENCES Ship(ID) ON DELETE CASCADE, 
FOREIGN KEY(CID) REFERENCES Captain(ID) ON DELETE CASCADE);
--for this we need to use outside code to make sure that captain has at least one cruize

CREATE TABLE Customer(first_name CHAR[11], last_name CHAR[11], gender CHAR[9], date_of_birth CHAR[11] NOT NULL, 
address CHAR[64] NOT NULL, contact_num int NOT NULL, ID int NOT NULL, Zip_code int NOT NULL,cnum int NOT NULL, 
PRIMARY KEY (ID), 
FOREIGN KEY(cnum) REFERENCES Cruise(cnum) ON DELETE CASCADE);

CREATE TABLE Crew(name CHAR[11] NOT NULL, ID int NOT NULL, cnum int NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY(cnum) REFERENCES Cruise(cnum) ON DELETE CASCADE);

CREATE TABLE CRU_CRE(cnum int NOT NULL, ID int, 
PRIMARY KEY (ID,cnum), 
FOREIGN KEY(cnum) REFERENCES Cruise(cnum) ON DELETE CASCADE, 
FOREIGN KEY(ID) REFERENCES Crew(ID) ON DELETE CASCADE);

CREATE TABLE CAP_SHI(CID int NOT NULL, SID int NOT NULL, 
PRIMARY KEY (CID,SID), 
FOREIGN KEY(SID) REFERENCES Ship(ID) ON DELETE CASCADE, 
FOREIGN KEY(CID) REFERENCES Captain(ID) ON DELETE CASCADE);

CREATE TABLE RES_CRU(Rnum int NOT NULL, cnum int NOT NULL, 
PRIMARY KEY (Rnum,cnum), 
FOREIGN KEY(Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE, 
FOREIGN KEY(cnum) REFERENCES Cruise(cnum) ON DELETE CASCADE);

CREATE TABLE RES_CUS(Rnum int NOT NULL, ID int NOT NULL, 
PRIMARY KEY (Rnum, ID), 
FOREIGN KEY(Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE, 
FOREIGN KEY(ID) REFERENCES Customer(ID) ON DELETE CASCADE);

CREATE TABLE CUST_CRU(cnum int NOT NULL, ID int NOT NULL, 
PRIMARY KEY (cnum, ID), 
FOREIGN KEY(cnum) REFERENCES Cruise(cnum) ON DELETE CASCADE, 
FOREIGN KEY(ID) REFERENCES Customer(ID) ON DELETE CASCADE);


CREATE TABLE SHI_TEC(code int NOT NULL, date CHAR[11], SID int NOT NULL, TID int, 
PRIMARY KEY (code), 
FOREIGN KEY(SID) REFERENCES Ship(ID) ON DELETE CASCADE, 
FOREIGN KEY(TID) REFERENCES Technician(ID) ON DELETE CASCADE);
--assuming that code is a unique attribute


CREATE TABLE request(ID int, CID int NOT NULL, SID int NOT NULL, 
PRIMARY KEY (ID), 
FOREIGN KEY(CID) REFERENCES Captain(ID) ON DELETE CASCADE, 
FOREIGN KEY(SID) REFERENCES Ship(ID) ON DELETE CASCADE);
--if ID for requests is not identifying then we need to change the primary key to SID,CID

CREATE TABLE CAP_TEC(ID int, CID int NOT NULL, TID int NOT NULL, 
PRIMARY KEY (ID), 
FOREIGN KEY(CID) REFERENCES Captain(ID) ON DELETE CASCADE, 
FOREIGN KEY(TID) REFERENCES Technician(ID) ON DELETE CASCADE);
--if ID for requests is not identifying then we need to change the primary key to TID,CID

CREATE TABLE Schedule(cnum int NOT NULL, day char[11], depart_time CHAR[11], arrive_time CHAR[11], 
PRIMARY KEY (cnum), 
FOREIGN KEY(cnum) REFERENCES Cruise(cnum) ON DELETE CASCADE);
--for this we need to use outside code to make sure that cruise has at least one schedule

CREATE TABLE Waitlist(W_Rnum int NOT NULL, 
PRIMARY KEY (W_Rnum), 
FOREIGN KEY(W_Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);

CREATE TABLE Confirmed(C_Rnum int NOT NULL, 
PRIMARY KEY (C_Rnum), 
FOREIGN KEY(C_Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);

CREATE TABLE Reserved(R_Rnum int NOT NULL, 
PRIMARY KEY (R_Rnum), 
FOREIGN KEY(R_Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);
